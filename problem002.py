"""
Project Euler: Problem 2: Even Fibonacci Numbers
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence that do not exceed the nth term, find the sum of the even-valued terms.

fiboEvenSum(10) should return 44.
fiboEvenSum(18) should return 3382.
fiboEvenSum(23) should return 60696.
fiboEvenSum(43) should return 350704366.
"""


def genFib(n):
    i = 2
    fib = [1, 2]
    while i < n:
        fib.append(fib[i - 1] + fib[i - 2])
        i = i + 1
    return fib


def fiboEvenSum(n):
    sumOf = 0

    fib = genFib(n)
    for x in fib:
        if x % 2 == 0:
            sumOf = sumOf + x

    return print(sumOf)


fiboEvenSum(10)
fiboEvenSum(18)
fiboEvenSum(23)
fiboEvenSum(43)
